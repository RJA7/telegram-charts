!function(e){var t={};function i(s){if(t[s])return t[s].exports;var h=t[s]={i:s,l:!1,exports:{}};return e[s].call(h.exports,h,h.exports,i),h.l=!0,h.exports}i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var h in e)i.d(s,h,function(t){return e[t]}.bind(null,h));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=1)}([function(e){e.exports=[{columns:[["x",15424128e5,15424992e5,15425856e5,1542672e6,15427584e5,15428448e5,15429312e5,15430176e5,1543104e6,15431904e5,15432768e5,15433632e5,15434496e5,1543536e6,15436224e5,15437088e5,15437952e5,15438816e5,1543968e6,15440544e5,15441408e5,15442272e5,15443136e5,15444e8,15444864e5,15445728e5,15446592e5,15447456e5,1544832e6,15449184e5,15450048e5,15450912e5,15451776e5,1545264e6,15453504e5,15454368e5,15455232e5,15456096e5,1545696e6,15457824e5,15458688e5,15459552e5,15460416e5,1546128e6,15462144e5,15463008e5,15463872e5,15464736e5,154656e7,15466464e5,15467328e5,15468192e5,15469056e5,1546992e6,15470784e5,15471648e5,15472512e5,15473376e5,1547424e6,15475104e5,15475968e5,15476832e5,15477696e5,1547856e6,15479424e5,15480288e5,15481152e5,15482016e5,1548288e6,15483744e5,15484608e5,15485472e5,15486336e5,154872e7,15488064e5,15488928e5,15489792e5,15490656e5,1549152e6,15492384e5,15493248e5,15494112e5,15494976e5,1549584e6,15496704e5,15497568e5,15498432e5,15499296e5,1550016e6,15501024e5,15501888e5,15502752e5,15503616e5,1550448e6,15505344e5,15506208e5,15507072e5,15507936e5,155088e7,15509664e5,15510528e5,15511392e5,15512256e5,1551312e6,15513984e5,15514848e5,15515712e5,15516576e5,1551744e6,15518304e5,15519168e5,15520032e5],["y0",37,20,32,39,32,35,19,65,36,62,113,69,120,60,51,49,71,122,149,69,57,21,33,55,92,62,47,50,56,116,63,60,55,65,76,33,45,64,54,81,180,123,106,37,60,70,46,68,46,51,33,57,75,70,95,70,50,68,63,66,53,38,52,109,121,53,36,71,96,55,58,29,31,55,52,44,126,191,73,87,255,278,219,170,129,125,126,84,65,53,154,57,71,64,75,72,39,47,52,73,89,156,86,105,88,45,33,56,142,124,114,64],["y1",22,12,30,40,33,23,18,41,45,69,57,61,70,47,31,34,40,55,27,57,48,32,40,49,54,49,34,51,51,51,66,51,94,60,64,28,44,96,49,73,30,88,63,42,56,67,52,67,35,61,40,55,63,61,105,59,51,76,63,57,47,56,51,98,103,62,54,104,48,41,41,37,30,28,26,37,65,86,70,81,54,74,70,50,74,79,85,62,36,46,68,43,66,50,28,66,39,23,63,74,83,66,40,60,29,36,27,54,89,50,73,52]],types:{y0:"line",y1:"line",x:"x"},names:{y0:"#0",y1:"#1"},colors:{y0:"#3DC23F",y1:"#F34C44"}},{columns:[["x",15424128e5,15424992e5,15425856e5,1542672e6,15427584e5,15428448e5,15429312e5,15430176e5,1543104e6,15431904e5,15432768e5,15433632e5,15434496e5,1543536e6,15436224e5,15437088e5,15437952e5,15438816e5,1543968e6,15440544e5,15441408e5,15442272e5,15443136e5,15444e8,15444864e5,15445728e5,15446592e5,15447456e5,1544832e6,15449184e5,15450048e5,15450912e5,15451776e5,1545264e6,15453504e5,15454368e5,15455232e5,15456096e5,1545696e6,15457824e5,15458688e5,15459552e5,15460416e5,1546128e6,15462144e5,15463008e5,15463872e5,15464736e5,154656e7,15466464e5,15467328e5,15468192e5,15469056e5,1546992e6,15470784e5,15471648e5,15472512e5,15473376e5,1547424e6,15475104e5,15475968e5,15476832e5,15477696e5,1547856e6,15479424e5,15480288e5,15481152e5,15482016e5,1548288e6,15483744e5,15484608e5,15485472e5,15486336e5,154872e7,15488064e5,15488928e5,15489792e5,15490656e5,1549152e6,15492384e5,15493248e5,15494112e5,15494976e5,1549584e6,15496704e5,15497568e5,15498432e5,15499296e5,1550016e6,15501024e5,15501888e5,15502752e5,15503616e5,1550448e6,15505344e5,15506208e5,15507072e5,15507936e5,155088e7,15509664e5,15510528e5,15511392e5,15512256e5,1551312e6,15513984e5,15514848e5,15515712e5,15516576e5,1551744e6,15518304e5,15519168e5,15520032e5],["y0",6706,7579,7798,8307,7866,7736,7816,7630,7536,7105,7178,7619,7917,7483,5772,5700,5435,4837,4716,4890,4753,4820,4538,12162,39444,25765,18012,14421,13249,11310,10377,9399,8917,8259,7902,9442,47596,36160,23866,18500,15488,13722,12270,13413,10574,7092,7159,7880,8821,8306,7780,7963,7837,7611,7334,7413,7015,6742,6557,6593,6680,6725,6345,5988,6365,9911,28833,19694,14873,11911,10498,9708,8893,8365,7960,7694,45529,42858,31508,23289,19147,15874,14551,13124,11778,10809,10522,9918,9436,8617,8765,8194,8035,7865,7573,7422,7047,7147,6861,6669,6363,12073,32381,21390,15311,12819,11655,10696,9678,9143,8296,7852],["y1",3522,4088,4146,4477,4202,4157,4177,4203,4223,3948,3946,3898,3979,4052,3279,3229,3302,3040,3054,2982,3077,2965,2973,5148,22485,13077,9055,7446,6824,5995,5787,5367,4997,4689,4630,4785,22365,15244,10626,8666,7681,6929,6219,6367,5402,4932,4844,5146,5265,4887,4714,4722,4718,4693,4746,4819,4455,4419,4323,4407,4277,11589,6100,5076,4769,8929,14002,9756,7520,6343,5633,5415,5052,4850,4624,4480,14102,24005,14263,10845,9028,7755,7197,7001,6737,6254,6150,5922,5603,5048,5423,5003,5035,4747,4814,4661,4462,4516,4221,4111,4053,12515,15781,10499,8175,6831,6287,5990,5590,5148,4760,4809]],types:{y0:"line",y1:"line",x:"x"},names:{y0:"#0",y1:"#1"},colors:{y0:"#3DC23F",y1:"#F34C44"}},{columns:[["x",15424128e5,15424992e5,15425856e5,1542672e6,15427584e5,15428448e5,15429312e5,15430176e5,1543104e6,15431904e5,15432768e5,15433632e5,15434496e5,1543536e6,15436224e5,15437088e5,15437952e5,15438816e5,1543968e6,15440544e5,15441408e5,15442272e5,15443136e5,15444e8,15444864e5,15445728e5,15446592e5,15447456e5,1544832e6,15449184e5,15450048e5,15450912e5,15451776e5,1545264e6,15453504e5,15454368e5,15455232e5,15456096e5,1545696e6,15457824e5,15458688e5,15459552e5,15460416e5,1546128e6,15462144e5,15463008e5,15463872e5,15464736e5,154656e7,15466464e5,15467328e5,15468192e5,15469056e5,1546992e6,15470784e5,15471648e5,15472512e5,15473376e5,1547424e6,15475104e5,15475968e5,15476832e5,15477696e5,1547856e6,15479424e5,15480288e5,15481152e5,15482016e5,1548288e6,15483744e5,15484608e5,15485472e5,15486336e5,154872e7,15488064e5,15488928e5,15489792e5,15490656e5,1549152e6,15492384e5,15493248e5,15494112e5,15494976e5,1549584e6,15496704e5,15497568e5,15498432e5,15499296e5,1550016e6,15501024e5,15501888e5,15502752e5,15503616e5,1550448e6,15505344e5,15506208e5,15507072e5,15507936e5,155088e7,15509664e5,15510528e5,15511392e5,15512256e5,1551312e6,15513984e5,15514848e5,15515712e5,15516576e5,1551744e6,15518304e5,15519168e5,15520032e5],["y0",4747,4849,5045,5184,5746,5400,5424,5576,6436,5337,4840,5379,4678,4736,5074,4897,4349,5089,4543,5033,5047,4871,4812,4723,4545,4723,4721,4384,4277,4682,4805,4001,4610,5241,5113,4059,4529,4673,5291,5154,5123,5535,5540,5161,5666,5584,6999,6854,5083,5361,5863,5792,5586,6106,5481,5532,5853,5809,6244,6156,5596,5426,5422,5413,4795,5113,5279,5530,4939,4983,4984,5527,5765,5001,5818,6061,5956,5288,5837,5703,5440,5238,5957,6432,6389,6064,7065,5981,5779,6567,6320,5634,6023,5702,6066,5797,6163,6182,4906,5637,7073,6679,5831,6015,6266,6128,6156,6218,6050,6140,5877,7147],["y1",4605,5036,4956,5168,5008,5069,5223,5360,5695,5209,4796,5028,4931,5123,4987,4964,4982,5037,5050,5144,5049,4971,4911,4792,4562,4597,4759,4761,4646,4543,4597,4428,4213,4270,3961,4784,4699,4711,4855,4717,4563,4923,5041,4895,4877,5001,5410,5033,5045,5184,4976,5207,5354,5205,4887,4831,5083,5148,5369,5176,5022,4880,4969,5135,4836,4764,4782,4783,4646,4755,4744,4932,5059,4851,4614,4718,5018,5034,5223,5007,4839,4763,4761,5048,5330,5106,5956,5135,5006,4919,5511,5114,5122,5314,5089,5022,4918,4986,4626,4675,4951,4921,5173,5145,5209,4967,5030,5120,5030,4946,4795,5224]],types:{y0:"line",y1:"line",x:"x"},names:{y0:"#0",y1:"#1"},colors:{y0:"#3DC23F",y1:"#F34C44"}},{columns:[["x",15424128e5,15424992e5,15425856e5,1542672e6,15427584e5,15428448e5,15429312e5,15430176e5,1543104e6,15431904e5,15432768e5,15433632e5,15434496e5,1543536e6,15436224e5,15437088e5,15437952e5,15438816e5,1543968e6,15440544e5,15441408e5,15442272e5,15443136e5,15444e8,15444864e5,15445728e5,15446592e5,15447456e5,1544832e6,15449184e5,15450048e5,15450912e5,15451776e5,1545264e6,15453504e5,15454368e5,15455232e5,15456096e5,1545696e6,15457824e5,15458688e5,15459552e5,15460416e5,1546128e6,15462144e5,15463008e5,15463872e5,15464736e5,154656e7,15466464e5,15467328e5,15468192e5,15469056e5,1546992e6,15470784e5,15471648e5,15472512e5,15473376e5,1547424e6,15475104e5,15475968e5,15476832e5,15477696e5,1547856e6,15479424e5,15480288e5,15481152e5,15482016e5,1548288e6,15483744e5,15484608e5,15485472e5,15486336e5,154872e7,15488064e5,15488928e5,15489792e5,15490656e5,1549152e6,15492384e5,15493248e5,15494112e5,15494976e5,1549584e6,15496704e5,15497568e5,15498432e5,15499296e5,1550016e6,15501024e5,15501888e5,15502752e5,15503616e5,1550448e6,15505344e5,15506208e5,15507072e5,15507936e5,155088e7,15509664e5,15510528e5,15511392e5,15512256e5,1551312e6,15513984e5,15514848e5,15515712e5,15516576e5,1551744e6,15518304e5,15519168e5,15520032e5],["y0",41,31,62,65,66,79,52,26,42,68,71,86,65,54,33,70,52,68,75,92,69,28,33,84,65,56,42,44,26,34,45,49,83,83,66,31,43,55,57,55,54,45,51,64,27,19,38,38,44,49,42,50,60,73,86,65,51,54,48,61,82,83,53,52,48,64,96,103,68,73,58,42,81,80,76,106,93,65,69,104,75,79,92,73,49,63,76,79,83,70,55,47,42,111,93,74,99,107,52,65,80,82,74,154,106,39,40,77,85,66,52,25],["y1",19,10,36,41,28,39,24,16,14,40,39,37,47,28,16,32,25,29,36,45,38,11,25,37,35,22,25,30,16,20,32,34,37,26,31,10,19,32,34,23,25,22,21,18,11,18,18,23,11,18,22,19,27,27,30,25,27,23,28,30,23,31,27,16,30,21,36,33,25,34,16,24,37,33,26,24,31,21,37,32,35,31,30,27,15,17,38,40,32,34,30,17,21,28,36,30,24,25,20,24,22,42,34,47,40,29,29,31,39,30,29,18]],types:{y0:"line",y1:"line",x:"x"},names:{y0:"#0",y1:"#1"},colors:{y0:"#3DC23F",y1:"#F34C44"}},{columns:[["x",15200352e5,15201216e5,1520208e6,15202944e5,15203808e5,15204672e5,15205536e5,152064e7,15207264e5,15208128e5,15208992e5,15209856e5,1521072e6,15211584e5,15212448e5,15213312e5,15214176e5,1521504e6,15215904e5,15216768e5,15217632e5,15218496e5,1521936e6,15220224e5,15221088e5,15221952e5,15222816e5,1522368e6,15224544e5,15225408e5,15226272e5,15227136e5,15228e8,15228864e5,15229728e5,15230592e5,15231456e5,1523232e6,15233184e5,15234048e5,15234912e5,15235776e5,1523664e6,15237504e5,15238368e5,15239232e5,15240096e5,1524096e6,15241824e5,15242688e5,15243552e5,15244416e5,1524528e6,15246144e5,15247008e5,15247872e5,15248736e5,152496e7,15250464e5,15251328e5,15252192e5,15253056e5,1525392e6,15254784e5,15255648e5,15256512e5,15257376e5,1525824e6,15259104e5,15259968e5,15260832e5,15261696e5,1526256e6,15263424e5,15264288e5,15265152e5,15266016e5,1526688e6,15267744e5,15268608e5,15269472e5,15270336e5,152712e7,15272064e5,15272928e5,15273792e5,15274656e5,1527552e6,15276384e5,15277248e5,15278112e5,15278976e5,1527984e6,15280704e5,15281568e5,15282432e5,15283296e5,1528416e6,15285024e5,15285888e5,15286752e5,15287616e5,1528848e6,15289344e5,15290208e5,15291072e5,15291936e5,152928e7,15293664e5,15294528e5,15295392e5,15296256e5,1529712e6,15297984e5,15298848e5,15299712e5,15300576e5,1530144e6,15302304e5,15303168e5,15304032e5,15304896e5,1530576e6,15306624e5,15307488e5,15308352e5,15309216e5,1531008e6,15310944e5,15311808e5,15312672e5,15313536e5,153144e7,15315264e5,15316128e5,15316992e5,15317856e5,1531872e6,15319584e5,15320448e5,15321312e5,15322176e5,1532304e6,15323904e5,15324768e5,15325632e5,15326496e5,1532736e6,15328224e5,15329088e5,15329952e5,15330816e5,1533168e6,15332544e5,15333408e5,15334272e5,15335136e5,15336e8,15336864e5,15337728e5,15338592e5,15339456e5,1534032e6,15341184e5,15342048e5,15342912e5,15343776e5,1534464e6,15345504e5,15346368e5,15347232e5,15348096e5,1534896e6,15349824e5,15350688e5,15351552e5,15352416e5,1535328e6,15354144e5,15355008e5,15355872e5,15356736e5,153576e7,15358464e5,15359328e5,15360192e5,15361056e5,1536192e6,15362784e5,15363648e5,15364512e5,15365376e5,1536624e6,15367104e5,15367968e5,15368832e5,15369696e5,1537056e6,15371424e5,15372288e5,15373152e5,15374016e5,1537488e6,15375744e5,15376608e5,15377472e5,15378336e5,153792e7,15380064e5,15380928e5,15381792e5,15382656e5,1538352e6,15384384e5,15385248e5,15386112e5,15386976e5,1538784e6,15388704e5,15389568e5,15390432e5,15391296e5,1539216e6,15393024e5,15393888e5,15394752e5,15395616e5,1539648e6,15397344e5,15398208e5,15399072e5,15399936e5,154008e7,15401664e5,15402528e5,15403392e5,15404256e5,1540512e6,15405984e5,15406848e5,15407712e5,15408576e5,1540944e6,15410304e5,15411168e5,15412032e5,15412896e5,1541376e6,15414624e5,15415488e5,15416352e5,15417216e5,1541808e6,15418944e5,15419808e5,15420672e5,15421536e5,154224e7,15423264e5,15424128e5,15424992e5,15425856e5,1542672e6,15427584e5,15428448e5,15429312e5,15430176e5,1543104e6,15431904e5,15432768e5,15433632e5,15434496e5,1543536e6,15436224e5,15437088e5,15437952e5,15438816e5,1543968e6,15440544e5,15441408e5,15442272e5,15443136e5,15444e8,15444864e5,15445728e5,15446592e5,15447456e5,1544832e6,15449184e5,15450048e5,15450912e5,15451776e5,1545264e6,15453504e5,15454368e5,15455232e5,15456096e5,1545696e6,15457824e5,15458688e5,15459552e5,15460416e5,1546128e6,15462144e5,15463008e5,15463872e5,15464736e5,154656e7,15466464e5,15467328e5,15468192e5,15469056e5,1546992e6,15470784e5,15471648e5,15472512e5,15473376e5,1547424e6,15475104e5,15475968e5,15476832e5,15477696e5,1547856e6,15479424e5,15480288e5,15481152e5,15482016e5,1548288e6,15483744e5,15484608e5,15485472e5,15486336e5,154872e7,15488064e5,15488928e5,15489792e5,15490656e5,1549152e6,15492384e5,15493248e5,15494112e5,15494976e5,1549584e6,15496704e5,15497568e5,15498432e5,15499296e5,1550016e6,15501024e5,15501888e5,15502752e5,15503616e5,1550448e6,15505344e5,15506208e5,15507072e5,15507936e5,155088e7,15509664e5,15510528e5,15511392e5,15512256e5,1551312e6,15513984e5,15514848e5,15515712e5,15516576e5,1551744e6,15518304e5,15519168e5,15520032e5,15520896e5],["y0",2298660,2253410,2515820,2506600,2460240,2408400,2317430,2240100,2295900,2609800,2594200,2626400,2615e3,2617800,2394500,2391100,2608300,2676e3,2637700,2766600,3186500,3067700,2570700,2935e3,2949200,2913500,2763600,3216300,2343500,2361e3,258e4,2591800,2595200,2569500,2587700,2372500,2351200,2465600,2625100,2651300,2686700,2783300,2417400,2383800,2736300,2751100,2678900,2622300,2586e3,2365700,2407700,2541300,2600400,2581500,2576200,2550100,2334500,2139400,2015400,2019900,2210100,2191800,2240700,2107400,2026900,2258e3,2255200,2123200,2267800,2236100,2065700,2093300,2315300,2333200,2349800,2318300,2275e3,2110300,2077100,2335200,2357400,235e4,2293800,2303600,2118700,2100300,2219700,2361100,2349500,2347800,2318400,2141600,2178600,2432500,2448700,2440300,2450100,2424100,2229900,2152400,2402600,2401e3,2418100,2408600,2408400,2212600,2189e3,2450800,2444500,2451900,2451e3,2442600,2287900,2221100,2451900,2460200,2460900,2319900,2270300,2183800,2195300,2485e3,2460900,2500600,2495300,2479100,2290600,2235800,2459900,2484500,2491e3,2525600,2477300,2223700,2146700,2528200,2567800,2556300,2540700,2503e3,2301200,2251600,2538600,2596500,2553900,2534200,2527300,2337400,2332900,2688500,2585700,2559600,2651600,2586800,2445700,2472300,2633e3,2664600,2649400,2648900,2644600,2406400,2426200,2694e3,2740600,2711800,2700900,2645800,2422800,2438500,2697500,2712500,2690300,2684400,2517300,2435300,2444300,2781800,2807800,2804500,2771300,2798800,2633300,2597100,2946300,2889800,2949600,2951400,2928800,2701400,2709900,3012900,3019100,2977200,3012400,2989800,2752100,2749100,3033300,3050400,3023800,3066400,3047800,2792200,2799300,3096100,3132500,3082400,3071200,3021400,2818300,2737500,3037800,3123700,3138900,3181800,3118500,2834500,2826900,3171e3,3175900,3184300,3195800,3129100,2834100,2876800,3019e3,3214e3,3227900,3189600,3187800,2886800,2880500,3218200,3253700,3260400,3243300,3204e3,2962700,2968600,3282100,3618900,3017e3,3037300,3044500,2758900,2784600,3032900,3132400,3075800,3108200,3076200,2851800,2837800,3107500,3146800,3145100,3145300,3158400,2872100,2823800,3190400,3209300,3170800,3195300,3183e3,2910300,2937400,3297100,3293600,3278400,3234200,3224e3,3013900,2955300,3303900,3323300,3352600,3348400,3340600,3110600,3066400,3409200,3462100,3394200,3383100,3433700,3184e3,3092700,3417400,4505200,3094500,3106100,3083200,3005600,2866700,2984100,2954200,3086800,3070500,3040900,2903500,3592500,3316200,2930500,2961900,3009600,3027200,2871600,2831600,2881700,3054200,3116600,3120800,3157300,2950700,2982700,3192800,3223300,3219500,3235900,3214100,3004400,2963500,3280400,3262400,3256e3,3258400,3264900,3107500,3057400,3326600,3332400,3357e3,3365100,3359500,3127400,3130200,3367100,3422700,3436400,3431100,36e5,3146100,3170900,3467300,3483400,3473600,3454700,3390200,3213600,3188800,3498200,3498600,3493500,3478900,3446400,3239200,3229100,3559600,3563600,3549800,3577300,3524400,3282500,3271300,3599200,3575200,3554400,3540300,3450600,2812e3],["y1",1130400,1065370,1211030,1215590,1206540,1206720,1085450,1047320,1071720,1253170,1261050,1264660,1260240,1264840,1130440,1121660,1294120,1290780,1284540,1302860,1296810,1165450,1128830,1302070,1304470,1307090,1268e3,1302160,1159330,1163530,1327140,1320680,1319200,1306810,1287990,1121240,1145070,1132400,1310310,1329340,1340060,1333530,1167040,1153260,1356930,1366500,1375970,1378570,1357460,1192240,1188650,1386450,1400570,1395730,1404160,1378120,1195410,1082e3,1189660,1197540,1367850,1389070,1386300,1282240,1209450,1409070,1409450,1271120,1424860,1399990,1240640,1248530,1451770,1460240,1466100,1460990,1446730,1268830,1263270,1473530,1476230,1480760,1460520,1454730,1263910,1227240,1303900,1474760,1473400,1477380,1466790,1285620,1280100,1491820,1499660,1496260,1485990,1473140,1301290,1273440,1487420,1494560,1500790,1508660,1489400,1301960,1297680,1501170,1503e3,1488980,1501170,1479060,1367980,1296050,1493920,1487830,1479120,1338410,1318550,1266620,1285640,1487970,1489080,1489580,1475400,1471140,1316010,1271940,1476160,1480670,1491030,1480940,1477640,1305750,1296770,1483400,1494440,1495740,1485900,1484400,1319160,1284010,1488140,1502910,1503450,1485410,1498200,1323200,1303150,1506840,1523440,1521490,1516770,1504300,1327520,1307630,1518100,1521370,1521280,1521660,1517700,1349880,1333010,1543800,1553730,1546490,1541710,1532690,1367020,1354040,1560080,1564990,1565050,1561110,1406570,1340850,1368550,1600180,1630760,1621360,1636580,1652580,1489550,1465750,1731080,1730190,1732260,1730210,1724800,1519480,1520490,1758280,1774530,1770690,1781100,1762270,1551690,1541620,1787290,1795490,1802940,1799130,1778850,1560040,1564580,1822410,1819680,1812390,1814100,1798060,1587880,1589320,1833920,1843420,1851460,1845550,1822980,1596860,1595900,1866e3,1860480,1862600,1863950,1827540,1585280,1588970,1683930,1879500,1883300,1879040,1846160,1639090,1632580,1895780,1897620,1906e3,1906730,1895290,1670120,1670190,1914360,1932890,1933160,1921800,1898720,1673530,1685190,1937730,1951850,1949900,1949020,1923160,1718450,1704040,1964800,1975140,2002510,1985340,1959ey2",820900,766050,894390,894540,887590,814490,786610,744660,770920,930330,930190,942060,933690,922280,810770,809760,952010,959070,957020,955890,948250,825710,804970,958480,959090,970200,907010,950150,825240,820890,971020,973560,967940,960360,931820,795020,753860,808740,97e4,981020,979810,975840,829690,819300,992290,998040,1006540,1013790,995130,848190,851890,1024210,1032210,1032290,1027510,1010090,850110,741740,844400,850410,1006690,1018470,1011630,916990,861050,1039650,1032640,904200,1045560,1022330,888970,896300,1073460,1074860,1074820,1074880,1057340,909410,906710,1078860,1092760,1083360,1078680,1067310,903090,858360,947540,1089590,1095060,1093130,1070660,915380,916530,1108410,1109460,1097230,1094520,1074630,915520,915750,1101730,1104580,1107930,1116850,1106360,928500,928210,1110530,1103230,1099970,1106180,1096060,982050,932620,1100880,1099970,1080040,959480,951360,902160,916070,1094120,1092530,1089290,1081760,1073320,937320,900010,1084910,1082620,1080960,1074050,1077810,925090,913970,1082900,1089240,1088890,1088720,1084170,938750,904060,1091540,1093660,1104520,1085860,1091880,939720,919790,1098590,1110310,1105580,1105220,1096580,940670,923480,1102360,1102760,1102280,1108680,1109210,955490,944730,1125380,1127440,1123070,1123910,1121160,966340,946940,1141980,1146790,1147420,1132920,990870,946370,964610,1171550,1187e3,1186370,1199100,1213ee3,1401510,1189880,1309810,1380230,1383630,1254140,1216830,1243860,1442240,1481680,1480680,1490700,1315410,1300930,1530520,1532340,1539150,1541510,1532770,1344910,1325530,1563330,1568490,1580110,1575130,1564880,1369810,1359060,1608230,1605640,1605970,1601640,1590810,1381740,1375190,1625850,1621800,1629910,1628510,1609760,1397880,1392180,1647700,1646770,1644200,1667150,1610910,1408450,1395010,1652870,1658870,1660310,1659060,1629490,1435450,1407720,1675610,1682450,1682070,1693010,1669030,1448500,1439490,1710110,1702690,1707e3,1662770,1512800,1101660],["y3",409540,377260,456380,460230,452020,389350,397230,369e3,382180,473570,477470,477550,478030,466150,397480,406380,494570,494680,482810,487700,475090,400520,397940,484160,487740,493260,434500,475410,398650,404690,491980,493410,485250,484740,465490,377460,353960,396390,493300,497560,495110,485260,394770,402910,500540,506260,509680,514010,494350,405360,412560,513030,521320,515730,518170,499850,394960,328510,406450,408080,501980,507800,496990,442530,414260,525770,513440,442660,526810,500190,426220,436110,546820,543480,545420,540530,527770,431050,443100,549550,551600,548120,542290,528810,435370,407250,463200,553640,554110,555820,536470,440460,447740,563330,561850,556430,550910,539440,441200,442310,563100,563760,559230,570870,555280,447750,455570,564630,562510,556050,555560,556470,484080,451320,561060,553630,540660,473500,472500,438550,447590,548670,549580,539920,541510,540380,450260,432260,535950,545160,543810,536990,539680,446570,444470,543450,549070,547840,541430,540200,450080,431800,549290,545890,556300,536500,543890,450890,440180,550850,554740,553460,553440,546420,446710,436640,553270,547750,551920,547610,545500,449220,447510,560050,561560,561560,556630,559340,461630,456300,569070,574800,575220,566180,472200,450530,462960,590290,597250,592970,604870,613050,512200,495980,649860,645070,636950,647120,630390,518820,525990,661700,659770,660650,669560,644510,529610,539520,673850,668530,673770,669480,654540,536090,548400,690100,684900,687040,685940,666360,560140,553050,696740,694490,703e3,697980,674460,548230,557370,697150,700110,701170,695810,669780,543500,540170,597430,711500,699770,698520,682170,568380,572950,715580,716050,720770,720660,695220,572970,578170,722280,724280,727910,719820,699840,580870,586270,729850,733680,726590,731270,709330,593070,600500,743590,743690,767660,747140,730510,607540,610480,762440,772960,763480,758490,741090,614450,645760,831130,792100,780410,778620,761e3,643620,650320,802640,805900,803960,800580,783660,648310,668150,825940,818650,816630,821e3,782790,657850,671660,817660,816020,821380,816280,800240,712510,648060,711170,709110,802240,792710,772260,691490,636050,649450,566120,651310,701910,702270,627880,605290,621710,744830,762830,765640,764140,648720,642430,786580,778790,780060,789170,772600,652160,648950,795360,802250,808010,801890,793490,669240,665310,814370,810880,814580,813950,802070,670450,674250,823010,820620,821400,820760,804300,681870,681460,831580,835600,835390,840770,810700,675170,680870,832e3,836790,845630,844560,821810,690310,683810,851150,848090,846480,858340,831290,696470,695540,866980,868190,861720,834530,706650,439140]],types:{y0:"line",y1:"line",y2:"line",y3:"line",x:"x"},names:{y0:"#0",y1:"#1",y2:"#2",y3:"#3"},colors:{y0:"#cb513a",y1:"#73c03a",y2:"#65b9ac",y3:"#4682b4"}}]},function(e,t,i){e.exports=i(2)},function(e,t,i){"use strict";i.r(t);class s{constructor(){this.bindings=[]}add(e,t,i){return this.bindings.splice(this._getIndex(i),1,{handler:e,ctx:t,isOnce:!1}),this}addOnce(e,t,i){return this.bindings.splice(this._getIndex(i),1,{handler:e,ctx:t,isOnce:!0}),this}_getIndex(e){return e?Math.max(0,Math.min(this.bindings.length,e)):this.bindings.length}remove(e,t){const{bindings:i}=this;for(let s=i.length-1;s>=0;s--)i[s].handler===e&&i[s].ctx===t&&i.splice(s,1)}removeAll(){this.bindings.length=0}dispatch(e,t,i){const{bindings:s}=this;let h=s.length,n=0;for(;n<h&&!1!==(s[n].ctx?s[n].handler.call(s[n].ctx,e,t,i):s[n].handler(e,t,i));)n++;for(;h>0;)s[--h].isOnce&&s.splice(h,1);return this}}const h=document.createElement("canvas").getContext("2d");class n{constructor(e,t){t&&t.children.push(this),this.engine=e,this.parent=t,this.x=0,this.y=0,this.scaleX=1,this.scaleY=1,this.anchorX=0,this.anchorY=0,this.width=1,this.height=1,this.children=[],this.global={x:0,y:0,scaleX:1,scaleY:1,width:1,height:1},this.cache={canvas:null,ctx:null},this.stopGlobalInput=!1,this.onInputDown=new s,this.onInputUp=new s,this.onInputMove=new s}handleResize(e,t){const{children:i}=this;for(let s=0,h=i.length;s<h;s++)i[s].handleResize(e,t)}contains(e,t){const{global:{x:i,y:s,width:h,height:n}}=this;return i<e&&i+h>e&&s<t&&s+n>t}bakeText(e,t){this.cache.canvas||(this.cache.canvas=document.createElement("canvas"),this.cache.ctx=this.cache.canvas.getContext("2d"));const{size:i=24,family:s="Arial",fill:h="",stroke:n="",lineWidth:a=0,lineSpacing:o=1.5}=t,{cache:{canvas:r,ctx:l}}=this,c=a/2,d=e.split("\n");this.width=0;for(let i=0,s=d.length;i<s;i++)this.width=Math.max(this.width,this.measureText(e,t,this).width);const g=this.height;r.width=this.width,r.height=this.height=g*d.length+o*g*(d.length-1),l.font=`${i}px ${s}`,l.textBaseline="top",l.textAlign="left",""!==h&&(l.fillStyle=h),a>0&&(l.strokeStyle=n,l.lineWidth=a);for(let e=0,t=d.length,i=g*o;e<t;e++)""!==h&&l.fillText(d[e],c,c+i*e),a>0&&l.strokeText(d[e],c,c+i*e)}measureText(e,t,i={width:0,height:0}){const{size:s=24,family:n="Arial",lineWidth:a=0}=t;return h.font=`${s}px ${n}`,i.width=h.measureText(e).width+a,i.height=s+a,i}clampX(e,t){this.x=Math.max(e,Math.min(t,this.x))}destroy(){if(this.parent){const e=this.parent.children.indexOf(this);-1!==e&&this.parent.children.splice(e,1)}const e=this.engine.input.graphs.indexOf(this);-1!==e&&this.engine.input.graphs.splice(e,1),this.onInputDown.removeAll(),this.onInputUp.removeAll(),this.onInputMove.removeAll(),this.engine=null,this.parent=null,this.global=null,this.cache=null}_update(){const{children:e}=this;this.update();for(let t=0,i=e.length;t<i;t++)e[t]._update()}_render(e,t,i,s,h){const{children:n,global:a}=this;a.scaleX=s*this.scaleX,a.scaleY=h*this.scaleY,a.width=this.width*a.scaleX,a.height=this.height*a.scaleY,a.x=t+this.x*s-a.width*this.anchorX,a.y=i+this.y*h-a.height*this.anchorY,this.render(e);for(let t=0,i=n.length;t<i;t++)n[t]._render(e,a.x,a.y,a.scaleX,a.scaleY)}update(){}render(e){}}class a{constructor(e){this.engine=e,this.graphs=[],this.downGraph=null,this.dx=0,this.dy=0,this.x=0,this.y=0,this.isDown=!1,this.isUp=!0,this._fired=!1,this.ticksAfterLastInput=0,this.onDown=new s,this.onUp=new s,this.onMove=new s,[{down:"mousedown",up:"mouseup",move:"mousemove"},{down:"touchstart",up:"touchend",move:"touchmove"}].forEach(({down:e,up:t,move:i})=>{window.addEventListener(e,this.handleMouseDown.bind(this)),window.addEventListener(t,this.handleMouseUp.bind(this)),window.addEventListener(i,this.handleMouseMove.bind(this))})}add(e){this.graphs.push(e)}handleMouseDown(e){if(this._fired||this.ticksAfterLastInput<2)return;this._fired=!0;const t=e.touches&&e.touches[0]||e,{graphs:i,engine:{viewPort:s}}=this,h=(t.clientX-s.x)*s.scale,n=(t.clientY-s.y)*s.scale;let a=i.length;for(;a-- >0;)if(i[a].contains(h,n)){this.downGraph=i[a];break}this.isDown=!0,this.isUp=!1,this.x=h,this.y=n,(!this.downGraph||!this.downGraph.stopGlobalInput)&&this.onDown.dispatch(),this.downGraph&&this.downGraph.onInputDown.dispatch()}handleMouseUp(){this._fired||(this._fired=!0,this.isDown=!1,this.isUp=!0,(!this.downGraph||!this.downGraph.stopGlobalInput)&&this.onUp.dispatch(),this.downGraph&&this.downGraph.onInputUp.dispatch(),this.downGraph=null)}handleMouseMove(e){const t=e.touches&&e.touches[0]||e,{viewPort:i}=this.engine,s=(t.clientX-i.x)*i.scale,h=(t.clientY-i.y)*i.scale;this.dx=s-this.x,this.dy=h-this.y,this.x=s,this.y=h,(!this.downGraph||!this.downGraph.stopGlobalInput)&&this.onMove.dispatch(),this.downGraph&&this.downGraph.onInputMove.dispatch()}update(){this._fired=!1,this.ticksAfterLastInput=this.isDown?0:this.ticksAfterLastInput+1}}class o{constructor(e,t){this.engine=e,this.target=t,this.src=null,this.dst=null,this.keys=null,this.ease=null,this.ticks=0,this.ticksLeft=0,this.onComplete=new s,this.onUpdate=new s}set(e,t,i=o.none){this.src={},this.dst=e,this.keys=[],this.ticks=Math.max(1,Math.round(60*t)),this.ticksLeft=this.ticks,this.ease=i;for(let t in e)e.hasOwnProperty(t)&&(this.src[t]=this.target[t],this.keys.push(t));return this}start(){return-1===this.engine.tweens.indexOf(this)&&this.engine.tweens.push(this),this}stop(){const e=this.engine.tweens.indexOf(this);-1!==e&&this.engine.tweens.splice(e,1)}update(){const{keys:e,target:t,dst:i,src:s}=this;this.ticksLeft--;const h=this.ease(1-this.ticksLeft/this.ticks);for(let n=0,a=e.length;n<a;n++){const a=e[n];t[a]=s[a]+(i[a]-s[a])*h}this.onUpdate.dispatch(h)}}o.sin={inOut:e=>0===e?0:1===e?1:.5*(1-Math.cos(Math.PI*e)),out:e=>0===e?0:1===e?1:Math.sin(e*Math.PI/2),in:e=>0===e?0:1===e?1:1-Math.cos(e*Math.PI/2)},o.none=(e=>e);const r={DAY:0,NIGHT:1},l={HELVETICA:"Helvetica"};var c={mode:r,family:l,[r.DAY]:{titleColor:{r:0,g:0,b:0},chartNameColor:{r:60,g:60,b:60},bgColor:{r:255,g:255,b:255},tapAnimColor:{r:228,g:236,b:244,a:.3},axisTextColor:{r:152,g:158,b:163},axisLineColor:{r:242,g:244,b:245,a:1},button:{fill:{r:255,g:255,b:255},stroke:{r:230,g:236,b:240},text:{r:0,g:0,b:0},anim:{r:220,g:220,b:220,a:1}},scrollBar:{frame:{r:0,g:0,b:0,a:.06},overlay:{r:255,g:255,b:255,a:.8},bg:{r:255,g:255,b:255}},info:{boxFill:{r:255,g:255,b:255},boxStroke:{r:32,g:32,b:32,a:.1},textColor:{r:60,g:60,b:60}}},[r.NIGHT]:{titleColor:{r:255,g:255,b:255},chartNameColor:{r:255,g:255,b:255},bgColor:{r:36,g:47,b:62},tapAnimColor:{r:228,g:236,b:244,a:.1},axisTextColor:{r:90,g:106,b:123},axisLineColor:{r:19,g:27,b:35,a:.6},button:{fill:{r:36,g:47,b:62},stroke:{r:52,g:70,b:88},text:{r:255,g:255,b:255},anim:{r:220,g:220,b:220,a:.4}},scrollBar:{frame:{r:255,g:255,b:255,a:.08},overlay:{r:31,g:42,b:56,a:.8},bg:{r:31,g:42,b:56}},info:{boxFill:{r:37,g:50,b:65},boxStroke:{r:32,g:32,b:32,a:.6},textColor:{r:255,g:255,b:255}}},modeTextStyle:{size:26,family:l.HELVETICA,fill:"rgb(24,145,255)"},axisTextStyle:{size:18,family:l.HELVETICA},buttonTextStyle:{size:28,family:l.HELVETICA},title:"Statistics",titleTextStyle:{weight:"bold",size:36,family:l.HELVETICA},chartNameStyle:{family:l.HELVETICA},months:["Jan","Fab","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],days:["Sun","Mon","Tue","Wed","Thu","Fri","Sut"]};class d extends n{constructor(e,t){super(e,t),this.color={r:0,g:0,b:0},this.colorTween=new o(e,this.color),e.input.add(this)}handleResize(e,t){super.handleResize(e,t),this.width=e,this.height=t}handleModeChange(e,t=.3){this.colorTween.set(c[e].bgColor,t).start()}render(e){const{global:t,color:i}=this;e.fillStyle=`rgb(${i.r},${i.g},${i.b})`,e.fillRect(t.x,t.y,t.width,t.height)}}class g extends n{constructor(e,t){super(e,t),this.anchorY=1,this.stopGlobalInput=!0,this.mode=c.mode.DAY,e.input.add(this)}handleModeChange(e){this.mode=e,this.bakeText(this.getText(e),c.modeTextStyle)}handleResize(e,t){this.bakeText(this.getText(this.mode),c.modeTextStyle)}getText(e){return e===c.mode.DAY?`Switch to${LP("\n"," ")}Night Mode`:`Switch to${LP("\n"," ")}Day Mode`}render(e){const{global:t}=this;e.drawImage(this.cache.canvas,t.x,t.y,t.width,t.height)}}var p=i(0);class u extends n{constructor(e,t){super(e,t),this.color=null,e.input.add(this)}render(e){const{global:t,color:i}=this;e.fillStyle=`rgba(${i.r},${i.g},${i.b},${i.a})`,e.fillRect(t.x,t.y,t.width,t.height)}}class x extends n{constructor(e,t){super(e,t),this.color=null,e.input.add(this)}render(e){const{global:{x:t,y:i,width:s,height:h},color:n}=this;e.fillStyle=`rgba(${n.r},${n.g},${n.b},${n.a})`,e.fillRect(t,i,s,4),e.fillRect(t,i+h-4,s,4)}}class m extends n{constructor(e,t){super(e,t),this.color=null,e.input.add(this)}render(e){const{global:t,color:i}=this;e.fillStyle=`rgba(${i.r},${i.g},${i.b},${i.a})`,e.fillRect(t.x,t.y,t.width,t.height)}}const w=[1,2,4,5,6,8,10,12,15,20,25,30,35,40,50,60,70,75,80,100,150,200,250,300,350,400,450,500,600,700,750,800,900,1e3];class f extends n{constructor(e,t){super(e,t),this.colsHash=null,this.cols=null,this.colX=null,this.crop=null,this.range={minX:0,minY:0,maxX:0,maxY:0},this.crop={startPercentX:0,endPercentX:1},this.lineWidth=2,this.stepsY=5,this.yDelay=-1,this.onRangeYChange=new s,this.onRender=new s,this.rangeMinY=0,this.scaleX=1,this.scaleY=-1,this.scaleTween=new o(e,this),this.cropTween=new o(e,this.crop),this.cropTween.onUpdate.add(this.updateCrop,this)}setData(e){this.colsHash={},this.cols=e.columns.filter(t=>t[0]!==e.types.x).map(t=>{const i=(t=t.slice()).shift(),s=e.colors[i],h={raw:t,color:s,name:e.names[i],slice:t.slice(),isActive:!0,alpha:1,rgb:{r:Number(`0x${s.slice(1,3)}`),g:Number(`0x${s.slice(3,5)}`),b:Number(`0x${s.slice(5,7)}`)}};return h.alphaTween=new o(this.engine,h),this.colsHash[i]=h,h});const t=e.columns.filter(t=>t[0]===e.types.x)[0].slice();t.shift(),this.colX={raw:t,slice:t.slice()},this.refreshRangeX(),this.refreshRangeY(),this.scaleTween.stop(),this.rangeMinY=this.range.minY,this.scaleX=this.width/(this.range.maxX-this.range.minX),this.scaleY=this.height/(this.range.maxY-this.range.minY),this.crop.startPercentX=0,this.crop.endPercentX=1}refreshRangeX(){const{range:e,colX:t}=this;e.minX=t.slice[0],e.maxX=t.slice[t.slice.length-1]}refreshRangeY(){const{cols:e,range:t}=this;let i=e.length,s=-Number.MAX_VALUE,h=Number.MAX_VALUE,n=!1;for(;i--;){const t=e[i];t.isActive&&(n=!0,s=Math.max(s,...t.slice),h=Math.min(h,...t.slice))}if(!n)return;let a=1,o=1;for(;;){const e=w[o]||1e3*w[o%w.length];if((o++,parseInt(e)===e)&&(a=e,(s-Math.floor(h/e)*e)/e<this.stepsY))break}s=(h=Math.floor(h/a)*a)+a*this.stepsY,h===t.minY&&s===t.maxY||(t.minY=h,t.maxY=s,clearTimeout(this.yDelay),this.yDelay=setTimeout(()=>this.rangeYChange(),0))}rangeYChange(){this.scaleTween.set({scaleY:this.height/(this.range.maxY-this.range.minY),rangeMinY:this.range.minY},.1,o.sin.out).start(),this.onRangeYChange.dispatch()}setCrop(e,t){const{startPercentX:i,endPercentX:s}=this.crop;this.crop.startPercentX=e,this.crop.endPercentX=t,this.updateCrop(),this.refreshRangeY(),this.crop.startPercentX=i,this.crop.endPercentX=s,this.cropTween.set({startPercentX:e,endPercentX:t},.2,o.sin.out).start()}updateCrop(){const{colX:e,cols:t,range:i,crop:s}=this,h=e.raw[e.raw.length-1]-e.raw[0],n=e.raw[0]+h*s.startPercentX,a=e.raw[0]+h*s.endPercentX,o=this.getInterpolationIndex(n,e.raw),r=this.getInterpolationIndex(a,e.raw);e.slice=e.raw.slice(Math.max(0,o-1),r+1),e.slice[0]=n,e.slice[e.slice.length-1]=a;for(let i=0,s=t.length;i<s;i++){const s=t[i];s.slice=s.raw.slice(Math.max(0,o-1),r+1),s.slice[0]=this.interpolate(n,e.raw,s.raw,o),s.slice[s.slice.length-1]=this.interpolate(a,e.raw,s.raw,r)}this.refreshRangeX(),this.anchorX=s.startPercentX,this.scaleX=this.width/(i.maxX-i.minX)}getInterpolationIndex(e,t){for(let i=1,s=t.length;i<s;i++)if(t[i]>=e)return i;return 0}interpolate(e,t,i,s=this.getInterpolationIndex(e,t)){return 0===s?i[0]:i[s-1]+(i[s]-i[s-1])*((e-t[s-1])/(t[s]-t[s-1]))}setColVisibility(e,t){const{range:i,colsHash:s,scaleTween:h}=this,n=s[e];n.alphaTween.set({alpha:t?1:0},t?.2:.1).start(),n.isActive=t,this.refreshRangeY(),h.set({scaleY:this.height/(i.maxY-i.minY)},.2).start()}contains(e,t){const{global:{x:i,y:s}}=this;return e>i&&e<i+this.width&&t<s&&t>s+this.height}render(e){this.onRender.dispatch(e);const{colX:{slice:t},cols:i,global:{x:s,y:h,scaleX:n,scaleY:a},range:{minX:o},rangeMinY:r}=this;e.lineWidth=this.lineWidth,e.lineJoin="round";for(let l=0,c=i.length;l<c;l++){const{slice:c,rgb:d,alpha:g}=i[l];if(0!==g){e.beginPath(),e.moveTo(s+(t[0]-o)*n,h+(c[0]-r)*a);for(let i=1,l=t.length;i<l;i++)e.lineTo(s+(t[i]-o)*n,h+(c[i]-r)*a);e.strokeStyle=`rgba(${d.r},${d.g},${d.b},${g})`,e.stroke()}}}}class b extends n{constructor(e,t){super(e,t);const i={r:0,g:0,b:0,a:0},h={r:0,g:0,b:0,a:0},n={r:0,g:0,b:0},a=new f(e,this),r=new u(e,this);r.anchorX=1,r.anchorY=.5,r.color=i;const l=new u(e,this);l.anchorX=0,l.anchorY=.5,l.color=i;const c=new x(e,this);c.anchorX=.5,c.anchorY=.5,c.color=i,r.onInputMove.add(this.handleFrameLeftMove,this),l.onInputMove.add(this.handleFrameRightMove,this),c.onInputMove.add(this.handleFrameMove,this);const d=new m(e,this);d.color=h;const g=new m(e,this);g.anchorX=1,g.color=h,this.frameLeft=r,this.frameRight=l,this.frame=c,this.diagram=a,this.overlayLeft=d,this.overlayRight=g,this.bgColor=n,this.frameColorTween=new o(e,i),this.overlayColorTween=new o(e,h),this.bgColorTween=new o(e,n),this.onCropChange=new s}setData(e){this.diagram.x=-this.width/2,this.diagram.y=this.height-10,this.diagram.width=this.width,this.diagram.height=-(this.height-30),this.diagram.setData(e),this.frameLeft.x=-this.width/2,this.frameLeft.y=this.height/2,this.frameLeft.width=16,this.frameLeft.height=this.height,this.frameRight.x=this.width/2,this.frameRight.y=this.height/2,this.frameRight.width=16,this.frameRight.height=this.height,this.frame.y=this.height/2,this.frame.height=this.height,this.overlayLeft.x=-this.width/2-1,this.overlayLeft.height=this.height,this.overlayRight.x=this.width/2+1,this.overlayRight.height=this.height,this.syncFrame(!0)}handleModeChange(e,t=.3){this.frameColorTween.set(c[e].scrollBar.frame,t).start(),this.overlayColorTween.set(c[e].scrollBar.overlay,t).start(),this.bgColorTween.set(c[e].scrollBar.bg,t).start()}handleFrameLeftMove(){const{frameLeft:e,frameRight:t,engine:i,width:s}=this;i.input.isDown&&(e.x+=i.input.dx,e.clampX(-s/2,t.x-3),this.syncFrame())}handleFrameRightMove(){const{frameLeft:e,frameRight:t,engine:i,width:s}=this;i.input.isDown&&(t.x+=i.input.dx,t.clampX(e.x+3,s/2),this.syncFrame())}handleFrameMove(){const{frameLeft:e,frameRight:t,frame:i,engine:s,width:h}=this;s.input.isDown&&(i.x+=s.input.dx,i.clampX((i.width-h)/2,-(i.width-h)/2),e.x=i.x-i.width/2,t.x=i.x+i.width/2,this.syncFrame())}syncFrame(e=!1){const{frameLeft:t,frameRight:i,frame:s,overlayLeft:h,overlayRight:n,width:a}=this;s.x=(t.x+i.x)/2,s.width=i.x-t.x,h.width=Math.max(0,t.x-h.x-t.width),n.width=Math.max(0,n.x-i.x-i.width),!e&&this.onCropChange.dispatch(.5+t.x/a,.5+i.x/a)}render(e){const{global:t,bgColor:i}=this;e.fillStyle=`rgb(${i.r},${i.g},${i.b})`,e.fillRect(t.x-this.width/2,t.y,t.width,t.height)}}class y extends n{constructor(e,t,i){super(e,t),this.color=i,this.maskRadius=0,this.maskColor=null,this.animPercent=0,this.maskRadiusTween=new o(e,this),this.animTween=new o(e,this),this.animColor=c[c.mode.DAY].button.anim}setActive(e){this.animPercent=0,this.maskRadiusTween.set({maskRadius:e?0:1},.3,o.sin.out).start(),this.animTween.set({animPercent:1},.5,o.sin.in).start()}handleModeChange(e){this.animColor=c[e].button.anim}render(e){const{global:{x:t,y:i,width:s}}=this;if(e.beginPath(),e.arc(t,i,s/2,0,2*Math.PI),e.fillStyle=this.color,e.fill(),e.beginPath(),e.moveTo(t-8,i+1),e.lineTo(t-2,i+6),e.lineTo(t+9,i-6),e.lineCap="round",e.lineWidth=4,e.strokeStyle="#ffffff",e.stroke(),this.maskRadius>0){const h=this.maskColor;e.beginPath(),e.arc(t,i,(s-5)/2*this.maskRadius,0,2*Math.PI),e.fillStyle=`rgb(${h.r},${h.g},${h.b})`,e.fill()}if(this.animPercent>0){const s=this.animColor,h=(1-this.animPercent*this.animPercent)*s.a;e.beginPath(),e.arc(t,i,60*this.animPercent,0,2*Math.PI),e.strokeStyle=`rgba(${s.r},${s.g},${s.b},${h})`,e.lineWidth=20-10*this.animPercent,e.stroke(),this.animPercent=1===this.animPercent?0:this.animPercent}}}class C extends n{constructor(e,t,i,s){super(e,t),this.name=i.names[s],this.colId=s,this.fillColor={r:0,g:0,b:0},this.strokeColor={r:0,g:0,b:0},this.textColor={r:0,g:0,b:0},this.fillColorTween=new o(e,this.fillColor),this.strokeColorTween=new o(e,this.strokeColor),this.textColorTween=new o(e,this.textColor),this.measureText(this.name,c.buttonTextStyle,this),this.width+=100,this.height*=2,this.tick=new y(e,this,i.colors[s]),this.tick.x=this.height/2,this.tick.y=this.height/2,this.tick.width=.6*this.height,this.tick.maskColor=this.fillColor,this.isActive=!0}handleModeChange(e,t=.3){this.strokeColorTween.set(c[e].button.stroke,t).start(),this.fillColorTween.set(c[e].button.fill,t).start(),this.textColorTween.set(c[e].button.text,t).start(),this.tick.handleModeChange(e)}toggleActive(){this.isActive=!this.isActive,this.tick.setActive(this.isActive)}render(e){const{global:{x:t,y:i,width:s,height:h},fillColor:n,strokeColor:a,textColor:o,tick:r}=this,l=c.buttonTextStyle,d=h/2;if(e.beginPath(),e.arc(t+d,i+d,d-2,.5*Math.PI,1.5*Math.PI),e.arc(t+s-d,i+d,d-2,.5*-Math.PI,.5*Math.PI),e.closePath(),e.lineWidth=2,e.strokeStyle=`rgb(${a.r},${a.g},${a.b})`,e.fillStyle=`rgb(${n.r},${n.g},${n.b})`,e.fill(),e.stroke(),0!==r.animPercent){const s=r.animColor,h=(1-this.animPercent*this.animPercent)*s.a*.8;e.save(),e.clip(),e.beginPath(),e.arc(t+d,i+d,140*r.animPercent,0,2*Math.PI),e.strokeStyle=`rgba(${s.r},${s.g},${s.b},${h})`,e.lineWidth=30,e.stroke(),e.restore()}e.textAlign="left",e.fillStyle=`rgb(${o.r},${o.g},${o.b})`,e.font=`${l.size}px ${l.family}`,e.fillText(this.name,t+70,i+d+.38*l.size)}}const T=["","k","M","B","T"];class $ extends n{constructor(e,t){super(e,t),this.risingSprites=[],this.fallingSprites=[],this.textColor={r:0,g:0,b:0},this.lineColor={r:0,g:0,b:0,a:0},this.textColorTween=new o(e,this.textColor),this.lineColorTween=new o(e,this.lineColor),this.shortcutIndex=0,this.floatDigitsCount=0,t.onRangeYChange.add(this.handleRangeChange,this),t.onRender.add(this.renderBg,this)}reset(){}handleRangeChange(){const{fallingSprites:e,risingSprites:t,parent:{stepsY:i,range:{minY:s,maxY:h}}}=this,n=(h-s)/i,a={};for(let e=0,i=t.length;e<i;e++)a[t[e].y]=t[e];t.length=0,this.shortcutIndex=this.getShortcutIndex(s+n),this.floatDigitsCount=this.getFloatDigitsCount(parseFloat(this.applyShortcut(s+n,this.shortcutIndex,2)));for(let e=0;e<=i;e++){const i=s+n*e;a[i]?(a[i].text=this.applyShortcut(i),t.push(a[i]),a[i]=null):0===i?t.push({y:i,text:"0",alpha:0}):t.push({y:i,text:this.applyShortcut(i),alpha:0})}for(let t in a)a[t]&&e.push(a[t])}getShortcutIndex(e){let t=0;for(;e>100;)t++,e/=1e3;return t}getFloatDigitsCount(e){let t=0;for(;e!==parseInt(e);)e*=10,t++;return t}applyShortcut(e,t=this.floatDigitsCount){if(0===e)return"0";let i=this.shortcutIndex;for(;i--;)e/=1e3;return`${e.toFixed(0===this.shortcutIndex?0:t)}${T[this.shortcutIndex]}`}handleModeChange(e,t=.3){this.textColorTween.set(c[e].axisTextColor,t).start(),this.lineColorTween.set(c[e].axisLineColor,t).start()}renderBg(e){const{global:{x:t,y:i},fallingSprites:s,risingSprites:h,parent:{rangeMinY:n,scaleY:a},lineColor:o,width:r}=this,l=[...s,...h],c=`rgba(${o.r},${o.g},${o.b},`;e.lineWidth=3;for(let s=0,h=l.length;s<h;s++){const h=l[s],d=i+(-n+h.y)*a;e.strokeStyle=`${c}${h.alpha*o.a})`,1===s&&(e.lineWidth=2),e.beginPath(),e.moveTo(t,d),e.lineTo(t+r,d),e.stroke()}}render(e){const{global:{x:t,y:i},fallingSprites:s,risingSprites:h,parent:{scaleY:n,rangeMinY:a},textColor:o}=this,r=c.axisTextStyle,l=`rgba(${o.r},${o.g},${o.b},`;e.font=`${r.size}px ${r.family}`,e.textAlign="left";for(let h=s.length-1;h>=0;h--){const a=s[h];a.alpha-=.1,a.alpha<=0?s.pop():(e.fillStyle=`${l}${a.alpha})`,e.fillText(a.text,t,i+a.y*n))}for(let s=h.length-1;s>=0;s--){const o=h[s];o.alpha=Math.min(1,o.alpha+.1),e.fillStyle=`${l}${o.alpha})`,e.fillText(o.text,t,i+(-a+o.y)*n-6)}}}$.shortcuts=T;const M=864e5;class v extends n{constructor(e,t){super(e,t),this.fullWidth=0,this.maxTexts=7,this.xs=[],this.texts=[],this.alphas=[],this.textColor={r:0,g:0,b:0},this.textColorTween=new o(e,this.textColor)}reset(){const{parent:e,xs:t,texts:i,alphas:s}=this;t.length=i.length=s.length=0;const h=Math.ceil((e.range.maxX-e.range.minX)/M/5)+.5,n=(Math.floor(e.range.minX/M)-h)*M,a=(Math.ceil(e.range.maxX/M)+h)*M;this.fullWidth=a-n;for(let e=n;e<=a;e+=M){const h=new Date(e);t.push(e),i.push(`${h.getDate()} ${c.months[h.getMonth()]}`),s.push(0)}}handleModeChange(e,t=.3){this.textColorTween.set(c[e].axisTextColor,t).start()}render(e){const{global:{x:t,y:i,scaleX:s},parent:h,xs:n,texts:a,alphas:o,fullWidth:r,maxTexts:l,textColor:d}=this,g=c.axisTextStyle,p=`rgba(${d.r},${d.g},${d.b},`;e.font=`${g.size}px ${g.family}`,e.textAlign="center";const{range:{minX:u,maxX:x}}=h,m=x-u,w=Math.ceil(m/M);let f=1;for(;f*l<w;)f*=2;f=Math.ceil(f);const b=Math.ceil(m/r/l*a.length/f)*f;for(let e=0,t=a.length;e<t;e+=b)o[e]=Math.min(1,o[e]+(n[e]>u&&n[e]<x?.35:0));for(let h=0,r=a.length;h<r;h++)o[h]=Math.max(0,o[h]-.2),0!==o[h]&&(e.fillStyle=`${p}${o[h]})`,e.fillText(a[h],t+(-u+n[h])*s,i+28))}}class I extends n{constructor(e,t){super(e,t),this.text="",this.color={r:0,g:0,b:0},this.colorTween=new o(e,this.color)}setData(e){this.text=e.name,this.measureText(this.text,c.chartNameStyle,this)}handleModeChange(e,t=.3){this.colorTween.set(c[e].chartNameColor,t).start()}render(e){const{global:t,color:i}=this,s=c.chartNameStyle;e.font=`${LP(28,24)}px ${s.family}`,e.fillStyle=`rgb(${i.r},${i.g},${i.b})`,e.alignText="left",e.fillText(this.text,t.x,t.y)}}class k extends n{constructor(e,t,i){super(e,t),this.axisY=i,this.alpha=0,this.boxFill={r:0,g:0,b:0},this.boxStroke={r:0,g:0,b:0},this.textColor={r:0,g:0,b:0},this.inputX=0,e.input.onDown.add(()=>this.inputX=e.input.x)}handleModeChange(e){this.boxFill=c[e].info.boxFill,this.boxStroke=c[e].info.boxStroke,this.textColor=c[e].info.textColor}update(){const{parent:e,engine:{input:t}}=this;t.downGraph===e&&e.contains(t.x,t.y)?this.alpha=Math.min(1,this.alpha+.1):this.alpha=Math.max(0,this.alpha-.2)}render(e){if(0===this.alpha)return;const{parent:t,parent:{global:i,cols:s,colX:h,rangeMinY:n},axisY:a,alpha:o,boxFill:r,boxStroke:l,textColor:d}=this;this.inputX+=.2*(this.engine.input.x-this.inputX);const g=Math.max(i.x,Math.min(i.x+t.width,this.inputX)),p=(g-i.x)/i.scaleX+t.range.minX;e.strokeStyle=`rgba(${a.lineColor.r},${a.lineColor.g},${a.lineColor.b},${o*a.lineColor.a})`,e.lineWidth=3,e.beginPath(),e.moveTo(g,i.y),e.lineTo(g,i.y+t.height),e.stroke();let u=[],x=[],m=[];for(let l=0,c=s.length;l<c;l++){const c=s[l];if(!c.isActive)continue;const d=t.interpolate(p,h.raw,c.raw),w=i.y+(d-n)*i.scaleY;e.beginPath(),e.arc(g,w,8,0,2*Math.PI),e.strokeStyle=`rgba(${c.rgb.r},${c.rgb.g},${c.rgb.b},${o})`,e.fillStyle=`rgba(${r.r},${r.g},${r.b},${o})`,e.lineWidth=3,e.fill(),e.stroke(),u.push(a.applyShortcut(d,2)),x.push(c.name),m.push(e.strokeStyle)}const w=new Date(p),f=80*u.length-10;let b=Math.max(i.x+186,Math.min(i.x+t.width-f,g+20));const y=i.y+t.height-14;{const t=b-186,i=b+f,s=y-28,h=s+64,n=10;e.beginPath(),e.moveTo(t+n,s),e.arcTo(i,s,i,h,n),e.arcTo(i,h,t,h,n),e.arcTo(t,h,t,s,n),e.arcTo(t,s,i,s,n),e.fillStyle=`rgba(${r.r},${r.g},${r.b},${o})`,e.strokeStyle=`rgba(${l.r},${l.g},${l.b},${o*l.a})`,e.lineWidth=3,e.stroke(),e.fill()}e.textAlign="right",e.fillStyle=`rgba(${d.r},${d.g},${d.b},${o})`,e.font=`bold 22px ${c.family.HELVETICA}`,e.fillText(`${c.days[w.getDay()]}, ${c.months[w.getMonth()]} ${w.getDate()}`,b-40,y),e.font=`bold 20px ${c.family.HELVETICA}`,e.fillText(`${w.getFullYear()}`,b-40,y+25),e.textAlign="left";for(let t=0,i=u.length;t<i;t++)e.fillStyle=m[t],e.font=`bold 22px ${c.family.HELVETICA}`,e.fillText(u[t],b,y),e.font=`20px ${c.family.HELVETICA}`,e.fillText(x[t],b,y+25),b+=80}}class P extends n{constructor(e,t){super(e,t);const i=new b(e,this),s=new f(e,this);s.lineWidth=3,e.input.add(s);const h=new v(e,s),n=new $(e,s),a=new k(e,s,n),o=new I(e,this);i.onCropChange.add(this.handleCropChange,this),this.buttons=[],this.topButton=null,this.width=580,this.scrollBar=i,this.diagram=s,this.axisX=h,this.axisY=n,this.alpha=1,this.info=a,this.nameText=o}handleCropChange(e,t){this.diagram.setCrop(e,t)}handleModeChange(e,t){this.axisX.handleModeChange(e,t),this.axisY.handleModeChange(e,t),this.scrollBar.handleModeChange(e,t),this.nameText.handleModeChange(e,t),this.info.handleModeChange(e),this.buttons.forEach(i=>i.handleModeChange(e,t))}handleButtonClick(e){if(e.toggleActive(),this.diagram.setColVisibility(e.colId,e.isActive),this.scrollBar.diagram.setColVisibility(e.colId,e.isActive),e!==this.topButton){const t=this.children.indexOf(e);this.children.splice(this.children.indexOf(this.topButton),1,e),this.children.splice(t,1,this.topButton),this.topButton=e}}handleResize(e,t){super.handleResize(e,t);const i=LP(20,10);let s=0,h=0,n=0;for(let e=0,t=this.buttons.length;e<t;e++)s+=this.buttons[e].width+i,h+=this.buttons[e].height+i,n=Math.max(n,this.buttons[e].width);if(LP(!0,!1)){this.nameText.x=(this.width-n)/2+26,this.nameText.y=-h/2-74;for(let e=0,t=this.buttons.length,s=this.nameText.y+14;e<t;e++)this.buttons[e].x=this.nameText.x-6,this.buttons[e].y=s+i,s=this.buttons[e].y+this.buttons[e].height}else{this.nameText.x=-this.nameText.width/2,this.nameText.y=-340;for(let e=0,t=this.buttons.length,h=.5*-s-4;e<t;e++)this.buttons[e].x=h+i,this.buttons[e].y=300,h=this.buttons[e].x+this.buttons[e].width}this.diagram.x=-this.width/2+LP(-n/2-20,0),this.diagram.y=120,this.diagram.width=this.width,this.diagram.height=-LP(390,400),this.scrollBar.x=this.diagram.x+this.width/2,this.scrollBar.y=LP(168,180),this.scrollBar.width=this.width,this.scrollBar.height=80,this.axisY.width=this.width*this.scaleX}setData(e,t){this.scrollBar.setData(e),this.diagram.setData(e),this.nameText.setData(e),this.axisX.reset(),this.axisY.reset();const{buttons:i,engine:s}=this;for(let e=0,t=i.length;e<t;e++)i[e].destroy();i.length=0;for(let h=0,n=e.columns.length;h<n;h++){const n=e.columns[h];if("x"===n[0])continue;const a=new C(s,this,e,n[0]);s.input.add(a),a.handleModeChange(t,0),i.push(a),a.stopGlobalInput=!0,a.onInputDown.add(this.handleButtonClick.bind(this,a))}this.topButton=i[i.length-1],this.handleResize(this.engine.view.width,this.engine.view.height)}_render(e,t,i,s,h){e.globalAlpha=this.alpha,super._render(e,t,i,s,h),1!==this.alpha&&(e.globalAlpha=1)}}class S extends n{constructor(e,t){super(e,t),this.percent=0,this.color=c[c.mode.DAY].tapAnimColor,this.tween=new o(e,this),e.input.onDown.add(this.handleInputDown,this),e.input.onUp.add(this.handleInputUp,this)}handleInputDown(){this.tween.set({percent:1},.2,o.sin.out).start()}handleInputUp(){this.tween.set({percent:0},.2,o.sin.out).start()}handleModeChange(e){this.color=c[e].tapAnimColor}render(e){if(0===this.percent)return;const{engine:{input:t},color:i}=this;e.beginPath(),e.arc(t.x,t.y,50*this.percent,0,2*Math.PI),e.fillStyle=`rgba(${i.r},${i.g},${i.b},${i.a})`,e.fill()}}class X extends n{constructor(e,t){super(e,t);const i=document.createElement("canvas");{i.width=10,i.height=20;const e=i.getContext("2d"),t=e.createLinearGradient(0,0,0,14);t.addColorStop(0,"rgba(0,0,0,0.1)"),t.addColorStop(1,"rgba(0,0,0,0)"),e.fillStyle=t,e.fillRect(0,0,i.width,i.height)}this.titleColor={r:0,g:0,b:0},this.height=i.height,this.gradientCanvas=i,this.titleColorTween=new o(e,this.titleColor)}handleResize(e,t){super.handleResize(e,t),this.width=e}handleModeChange(e,t=.3){this.titleColorTween.set(c[e].titleColor,t).start()}render(e){const{global:t,titleColor:i,engine:s}=this,h=c.titleTextStyle;e.drawImage(this.gradientCanvas,0,0,t.width,t.height),e.font=`${h.weight} ${h.size}px ${h.family}`,e.fillStyle=`rgb(${i.r},${i.g},${i.b})`,e.textAlign="center",e.fillText(c.title,.5*t.width,.5*s.view.height-LP(268,360))}}p.forEach((e,t)=>e.name=`Chart #${t+1}`);new class extends n{constructor(e){super(e,e.stage);const t=new d(e,this),i=new g(e,this),s=new P(e,this),h=new S(e,this),n=new X(e,this);this.bg=t,this.modeText=i,this.tapAnim=h,this.chart=s,this.header=n,this.mode=c.mode.DAY,this.dataIndex=0,this.isChartTween=null,this.chartTween=new o(e,s),i.onInputDown.add(this.handleModeTextClick,this),t.onInputMove.add(this.handleBgInputMove,this),t.onInputUp.add(this.handleBgInputUp,this),e.handleResize(),s.setData(p[this.dataIndex],this.mode),this.handleModeTextClick(0),e.handleResize()}handleModeTextClick(e){this.mode=this.mode===c.mode.DAY?c.mode.NIGHT:c.mode.DAY,this.bg.handleModeChange(this.mode,e),this.modeText.handleModeChange(this.mode,e),this.tapAnim.handleModeChange(this.mode,e),this.chart.handleModeChange(this.mode,e),this.header.handleModeChange(this.mode,e)}handleBgInputMove(){this.isChartTween||(this.chart.x+=this.engine.input.dx,this.chart.alpha=Math.max(0,1-Math.abs(this.engine.view.width/2-this.chart.x)/100),0===this.chart.alpha&&this.changeData(this.engine.input.dx>0?-1:1))}handleBgInputUp(){1!==this.chart.alpha&&this.chartTween.set({x:this.engine.view.width/2,alpha:1},.2,o.sin.out).start()}changeData(e){this.dataIndex=(this.dataIndex+p.length+e)%p.length,this.chart.setData(p[this.dataIndex],this.mode);const t=this.engine.view.width/2;this.chart.x=t+400*e,this.isChartTween=!0,this.chartTween.set({x:t,alpha:1},.2,o.sin.out).start()}handleResize(e,t){this.chart.y=t/2+LP(60,20),this.chartTween.ticksLeft>0?this.chartTween.dst.x=e/2:this.chart.x=e/2,super.handleResize(e,t),this.modeText.x=LP(this.chart.nameText.x+e/2,e/2-this.modeText.width/2),this.modeText.y=LP(this.chart.y+270,t-16)}update(){this.chartTween.ticksLeft<=0&&this.engine.input.isUp&&(this.isChartTween=!1)}}(new class{constructor(){const e=document.createElement("canvas");document.body.appendChild(e);const t=e.getContext("2d");t.lineJoin="round",t.lineCap="round",t.textBaseline="top",t.textAlign="left",this.ctx=t,this.view=e,this.stage=new n(this),this.input=new a(this),this.tweens=[],this.viewPort={x:0,y:0,scale:1},this.tick=this.tick.bind(this),window.addEventListener("resize",()=>this.handleResize()),this.handleResize(),requestAnimationFrame(this.tick)}tick(){if(requestAnimationFrame(this.tick),this.input.update(),this.input.ticksAfterLastInput>30&&0===this.tweens.length)return;const{stage:e,tweens:t}=this;let i=t.length;for(;i-- >0;){const e=t[i];e.update(),e.ticksLeft<=0&&(t.splice(i,1),e.onComplete.dispatch())}e._update(),e._render(this.ctx,0,0,1,1,1)}handleResize(e=window.innerWidth,t=window.innerHeight){window.LP=e>t?e=>e:(e,t)=>t;const i=LP(640*e/t,960*e/t),s=LP(960*t/e,640*t/e),h=Math.max(i/e,s/t);this.view.width=Math.ceil(e*h),this.view.height=Math.ceil(t*h),this.view.style.width=`${e}px`,this.view.style.height=`${t}px`,this.viewPort.x=0,this.viewPort.y=0,this.viewPort.scale=h,this.stage.handleResize(this.view.width,this.view.height),this.input.ticksAfterLastInput=0}})}]);